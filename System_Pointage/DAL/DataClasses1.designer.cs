#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System_Pointage.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="System_Pointage")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFiche_Poste(Fiche_Poste instance);
    partial void UpdateFiche_Poste(Fiche_Poste instance);
    partial void DeleteFiche_Poste(Fiche_Poste instance);
    partial void InsertMVMAgentDetail(MVMAgentDetail instance);
    partial void UpdateMVMAgentDetail(MVMAgentDetail instance);
    partial void DeleteMVMAgentDetail(MVMAgentDetail instance);
    partial void InsertUserAccessProfileDetail(UserAccessProfileDetail instance);
    partial void UpdateUserAccessProfileDetail(UserAccessProfileDetail instance);
    partial void DeleteUserAccessProfileDetail(UserAccessProfileDetail instance);
    partial void InsertUserAccessProfilePosteDetail(UserAccessProfilePosteDetail instance);
    partial void UpdateUserAccessProfilePosteDetail(UserAccessProfilePosteDetail instance);
    partial void DeleteUserAccessProfilePosteDetail(UserAccessProfilePosteDetail instance);
    partial void InsertUserAccessProfilePoste(UserAccessProfilePoste instance);
    partial void UpdateUserAccessProfilePoste(UserAccessProfilePoste instance);
    partial void DeleteUserAccessProfilePoste(UserAccessProfilePoste instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserAccessProfileName(UserAccessProfileName instance);
    partial void UpdateUserAccessProfileName(UserAccessProfileName instance);
    partial void DeleteUserAccessProfileName(UserAccessProfileName instance);
    partial void InsertFiche_Agent(Fiche_Agent instance);
    partial void UpdateFiche_Agent(Fiche_Agent instance);
    partial void DeleteFiche_Agent(Fiche_Agent instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System_Pointage.Properties.Settings.Default.System_PointageConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Fiche_Poste> Fiche_Postes
		{
			get
			{
				return this.GetTable<Fiche_Poste>();
			}
		}
		
		public System.Data.Linq.Table<MVMAgentDetail> MVMAgentDetails
		{
			get
			{
				return this.GetTable<MVMAgentDetail>();
			}
		}
		
		public System.Data.Linq.Table<UserAccessProfileDetail> UserAccessProfileDetails
		{
			get
			{
				return this.GetTable<UserAccessProfileDetail>();
			}
		}
		
		public System.Data.Linq.Table<UserAccessProfilePosteDetail> UserAccessProfilePosteDetails
		{
			get
			{
				return this.GetTable<UserAccessProfilePosteDetail>();
			}
		}
		
		public System.Data.Linq.Table<UserAccessProfilePoste> UserAccessProfilePostes
		{
			get
			{
				return this.GetTable<UserAccessProfilePoste>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserAccessProfileName> UserAccessProfileNames
		{
			get
			{
				return this.GetTable<UserAccessProfileName>();
			}
		}
		
		public System.Data.Linq.Table<Fiche_Agent> Fiche_Agents
		{
			get
			{
				return this.GetTable<Fiche_Agent>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fiche_Poste")]
	public partial class Fiche_Poste : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private double _Nembre_Contra;
		
		private double _M_Penalite;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNembre_ContraChanging(double value);
    partial void OnNembre_ContraChanged();
    partial void OnM_PenaliteChanging(double value);
    partial void OnM_PenaliteChanged();
    #endregion
		
		public Fiche_Poste()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nembre_Contra", DbType="Float NOT NULL")]
		public double Nembre_Contra
		{
			get
			{
				return this._Nembre_Contra;
			}
			set
			{
				if ((this._Nembre_Contra != value))
				{
					this.OnNembre_ContraChanging(value);
					this.SendPropertyChanging();
					this._Nembre_Contra = value;
					this.SendPropertyChanged("Nembre_Contra");
					this.OnNembre_ContraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_Penalite", DbType="Float NOT NULL")]
		public double M_Penalite
		{
			get
			{
				return this._M_Penalite;
			}
			set
			{
				if ((this._M_Penalite != value))
				{
					this.OnM_PenaliteChanging(value);
					this.SendPropertyChanging();
					this._M_Penalite = value;
					this.SendPropertyChanged("M_Penalite");
					this.OnM_PenaliteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MVMAgentDetails")]
	public partial class MVMAgentDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ItemID;
		
		private System.DateTime _Date;
		
		private string _Statut;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnStatutChanging(string value);
    partial void OnStatutChanged();
    #endregion
		
		public MVMAgentDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Statut", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string Statut
		{
			get
			{
				return this._Statut;
			}
			set
			{
				if ((this._Statut != value))
				{
					this.OnStatutChanging(value);
					this.SendPropertyChanging();
					this._Statut = value;
					this.SendPropertyChanged("Statut");
					this.OnStatutChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAccessProfileDetails")]
	public partial class UserAccessProfileDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ProfileID;
		
		private int _ScreenID;
		
		private bool _CanShow;
		
		private bool _CanOpen;
		
		private bool _CanAdd;
		
		private bool _CanEdit;
		
		private bool _CanDelete;
		
		private bool _CanPrint;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProfileIDChanging(int value);
    partial void OnProfileIDChanged();
    partial void OnScreenIDChanging(int value);
    partial void OnScreenIDChanged();
    partial void OnCanShowChanging(bool value);
    partial void OnCanShowChanged();
    partial void OnCanOpenChanging(bool value);
    partial void OnCanOpenChanged();
    partial void OnCanAddChanging(bool value);
    partial void OnCanAddChanged();
    partial void OnCanEditChanging(bool value);
    partial void OnCanEditChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    partial void OnCanPrintChanging(bool value);
    partial void OnCanPrintChanged();
    #endregion
		
		public UserAccessProfileDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileID", DbType="Int NOT NULL")]
		public int ProfileID
		{
			get
			{
				return this._ProfileID;
			}
			set
			{
				if ((this._ProfileID != value))
				{
					this.OnProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileID = value;
					this.SendPropertyChanged("ProfileID");
					this.OnProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenID", DbType="Int NOT NULL")]
		public int ScreenID
		{
			get
			{
				return this._ScreenID;
			}
			set
			{
				if ((this._ScreenID != value))
				{
					this.OnScreenIDChanging(value);
					this.SendPropertyChanging();
					this._ScreenID = value;
					this.SendPropertyChanged("ScreenID");
					this.OnScreenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanShow", DbType="Bit NOT NULL")]
		public bool CanShow
		{
			get
			{
				return this._CanShow;
			}
			set
			{
				if ((this._CanShow != value))
				{
					this.OnCanShowChanging(value);
					this.SendPropertyChanging();
					this._CanShow = value;
					this.SendPropertyChanged("CanShow");
					this.OnCanShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanOpen", DbType="Bit NOT NULL")]
		public bool CanOpen
		{
			get
			{
				return this._CanOpen;
			}
			set
			{
				if ((this._CanOpen != value))
				{
					this.OnCanOpenChanging(value);
					this.SendPropertyChanging();
					this._CanOpen = value;
					this.SendPropertyChanged("CanOpen");
					this.OnCanOpenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAdd", DbType="Bit NOT NULL")]
		public bool CanAdd
		{
			get
			{
				return this._CanAdd;
			}
			set
			{
				if ((this._CanAdd != value))
				{
					this.OnCanAddChanging(value);
					this.SendPropertyChanging();
					this._CanAdd = value;
					this.SendPropertyChanged("CanAdd");
					this.OnCanAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanEdit", DbType="Bit NOT NULL")]
		public bool CanEdit
		{
			get
			{
				return this._CanEdit;
			}
			set
			{
				if ((this._CanEdit != value))
				{
					this.OnCanEditChanging(value);
					this.SendPropertyChanging();
					this._CanEdit = value;
					this.SendPropertyChanged("CanEdit");
					this.OnCanEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPrint", DbType="Bit NOT NULL")]
		public bool CanPrint
		{
			get
			{
				return this._CanPrint;
			}
			set
			{
				if ((this._CanPrint != value))
				{
					this.OnCanPrintChanging(value);
					this.SendPropertyChanging();
					this._CanPrint = value;
					this.SendPropertyChanged("CanPrint");
					this.OnCanPrintChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAccessProfilePosteDetails")]
	public partial class UserAccessProfilePosteDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_Name_Poste;
		
		private int _ID_AccessPoste;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_Name_PosteChanging(int value);
    partial void OnID_Name_PosteChanged();
    partial void OnID_AccessPosteChanging(int value);
    partial void OnID_AccessPosteChanged();
    #endregion
		
		public UserAccessProfilePosteDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Name_Poste", DbType="Int NOT NULL")]
		public int ID_Name_Poste
		{
			get
			{
				return this._ID_Name_Poste;
			}
			set
			{
				if ((this._ID_Name_Poste != value))
				{
					this.OnID_Name_PosteChanging(value);
					this.SendPropertyChanging();
					this._ID_Name_Poste = value;
					this.SendPropertyChanged("ID_Name_Poste");
					this.OnID_Name_PosteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_AccessPoste", DbType="Int NOT NULL")]
		public int ID_AccessPoste
		{
			get
			{
				return this._ID_AccessPoste;
			}
			set
			{
				if ((this._ID_AccessPoste != value))
				{
					this.OnID_AccessPosteChanging(value);
					this.SendPropertyChanging();
					this._ID_AccessPoste = value;
					this.SendPropertyChanged("ID_AccessPoste");
					this.OnID_AccessPosteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAccessProfilePoste")]
	public partial class UserAccessProfilePoste : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public UserAccessProfilePoste()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _UserName;
		
		private string _Password;
		
		private byte _UserType;
		
		private System.Nullable<int> _ScreenProfileID;
		
		private bool _IsActive;
		
		private System.Nullable<int> _IDAccessPoste;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserTypeChanging(byte value);
    partial void OnUserTypeChanged();
    partial void OnScreenProfileIDChanging(System.Nullable<int> value);
    partial void OnScreenProfileIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIDAccessPosteChanging(System.Nullable<int> value);
    partial void OnIDAccessPosteChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="TinyInt NOT NULL")]
		public byte UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenProfileID", DbType="Int")]
		public System.Nullable<int> ScreenProfileID
		{
			get
			{
				return this._ScreenProfileID;
			}
			set
			{
				if ((this._ScreenProfileID != value))
				{
					this.OnScreenProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ScreenProfileID = value;
					this.SendPropertyChanged("ScreenProfileID");
					this.OnScreenProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAccessPoste", DbType="Int")]
		public System.Nullable<int> IDAccessPoste
		{
			get
			{
				return this._IDAccessPoste;
			}
			set
			{
				if ((this._IDAccessPoste != value))
				{
					this.OnIDAccessPosteChanging(value);
					this.SendPropertyChanging();
					this._IDAccessPoste = value;
					this.SendPropertyChanged("IDAccessPoste");
					this.OnIDAccessPosteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAccessProfileName")]
	public partial class UserAccessProfileName : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public UserAccessProfileName()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fiche_Agent")]
	public partial class Fiche_Agent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Matricule;
		
		private string _Name;
		
		private int _ID_Post;
		
		private System.Nullable<int> _Jour;
		
		private System.DateTime _Date_Embauche;
		
		private System.Nullable<bool> _Statut;
		
		private System.Nullable<int> _ScreenPosteD;
		
		private string _Affecter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMatriculeChanging(string value);
    partial void OnMatriculeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnID_PostChanging(int value);
    partial void OnID_PostChanged();
    partial void OnJourChanging(System.Nullable<int> value);
    partial void OnJourChanged();
    partial void OnDate_EmbaucheChanging(System.DateTime value);
    partial void OnDate_EmbaucheChanged();
    partial void OnStatutChanging(System.Nullable<bool> value);
    partial void OnStatutChanged();
    partial void OnScreenPosteDChanging(System.Nullable<int> value);
    partial void OnScreenPosteDChanged();
    partial void OnAffecterChanging(string value);
    partial void OnAffecterChanged();
    #endregion
		
		public Fiche_Agent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matricule", DbType="NVarChar(MAX)")]
		public string Matricule
		{
			get
			{
				return this._Matricule;
			}
			set
			{
				if ((this._Matricule != value))
				{
					this.OnMatriculeChanging(value);
					this.SendPropertyChanging();
					this._Matricule = value;
					this.SendPropertyChanged("Matricule");
					this.OnMatriculeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Post", DbType="Int NOT NULL")]
		public int ID_Post
		{
			get
			{
				return this._ID_Post;
			}
			set
			{
				if ((this._ID_Post != value))
				{
					this.OnID_PostChanging(value);
					this.SendPropertyChanging();
					this._ID_Post = value;
					this.SendPropertyChanged("ID_Post");
					this.OnID_PostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jour", DbType="Int")]
		public System.Nullable<int> Jour
		{
			get
			{
				return this._Jour;
			}
			set
			{
				if ((this._Jour != value))
				{
					this.OnJourChanging(value);
					this.SendPropertyChanging();
					this._Jour = value;
					this.SendPropertyChanged("Jour");
					this.OnJourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Embauche", DbType="Date NOT NULL")]
		public System.DateTime Date_Embauche
		{
			get
			{
				return this._Date_Embauche;
			}
			set
			{
				if ((this._Date_Embauche != value))
				{
					this.OnDate_EmbaucheChanging(value);
					this.SendPropertyChanging();
					this._Date_Embauche = value;
					this.SendPropertyChanged("Date_Embauche");
					this.OnDate_EmbaucheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Statut", DbType="Bit")]
		public System.Nullable<bool> Statut
		{
			get
			{
				return this._Statut;
			}
			set
			{
				if ((this._Statut != value))
				{
					this.OnStatutChanging(value);
					this.SendPropertyChanging();
					this._Statut = value;
					this.SendPropertyChanged("Statut");
					this.OnStatutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenPosteD", DbType="Int")]
		public System.Nullable<int> ScreenPosteD
		{
			get
			{
				return this._ScreenPosteD;
			}
			set
			{
				if ((this._ScreenPosteD != value))
				{
					this.OnScreenPosteDChanging(value);
					this.SendPropertyChanging();
					this._ScreenPosteD = value;
					this.SendPropertyChanged("ScreenPosteD");
					this.OnScreenPosteDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Affecter", DbType="NVarChar(10)")]
		public string Affecter
		{
			get
			{
				return this._Affecter;
			}
			set
			{
				if ((this._Affecter != value))
				{
					this.OnAffecterChanging(value);
					this.SendPropertyChanging();
					this._Affecter = value;
					this.SendPropertyChanged("Affecter");
					this.OnAffecterChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
